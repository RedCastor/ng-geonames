!function(e){"use strict";e.module("ngGeonames",[]).service("geonamesHelpers",["$q","$log","$timeout",function(n,t,o){function r(n,o){var r,a;if(e.isDefined(o))r=o;else if(0===Object.keys(n).length)r="mainGeonames";else if(Object.keys(n).length>=1)for(a in n)n.hasOwnProperty(a)&&(r=a);else t.error(s+"- You have more than 1 geonames on the DOM, you must provide the geonames ID to the geonamesData.getXXX call");return r}var s="[ng-geonames] ",a=function(n){return e.isDefined(n)&&null!==n};return{isTruthy:function(e){return"true"===e||!0===e},isEmpty:function(e){return 0===Object.keys(e).length},isUndefinedOrEmpty:function(n){return e.isUndefined(n)||null===n||0===Object.keys(n).length},isDefined:a,isUndefined:function(e){return!a(e)},isNumber:e.isNumber,isString:function(n){return e.isString(n)&&""!==n},isArray:e.isArray,isObject:e.isObject,isFunction:e.isFunction,equals:e.equals,getUnresolvedDefer:function(t,o){var s,a=r(t,o);return e.isDefined(t[a])&&!0!==t[a].resolvedDefer?s=t[a].defer:(s=n.defer(),t[a]={defer:s,resolvedDefer:!1}),s},setResolvedDefer:function(e,n){e[r(e,n)].resolvedDefer=!0},obtainEffectiveGeonamesId:r}}])}(window.angular),function(e){"use strict";window.angular.module("ngGeonames").factory("geonamesDefaults",["$q","geonamesHelpers",function(e,n){var t=n.isDefined,o=(n.isObject,n.obtainEffectiveGeonamesId),r={};return{reset:function(e){var n=o(r,e);"mainGeonames"!==n&&delete r[n]},getDefaults:function(e){var n=o(r,e);return r[n]},getGeonamesCreationDefaults:function(e){var n=o(r,e),t=r[n];return{server:t.server,maxRows:t.maxRows,postalCode:t.postalCode,country:t.country,username:t.username}},setDefaults:function(e,n){var s={server:"http://api.geonames.org",maxRows:50,postalCode:!1,country:[],username:"demo"};t(e)&&(s.server=t(e.server)?e.server:s.server,s.maxRows=t(e.maxRows)?e.maxRows:s.maxRows,s.postalCode=t(e.postalCode)?e.postalCode:s.postalCode,s.country=t(e.country)?e.country:s.country,s.username=t(e.username)?e.username:s.username);var a=o(r,n);return r[a]=s,s}}}])}(),function(e){"use strict";window.angular.module("ngGeonames").service("geonamesData",["$q","$log","geonamesHelpers",function(e,n,t){var o=t.getDefer,r=t.getUnresolvedDefer,s=t.setResolvedDefer,a={},i=this,u=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},c=["geonames"];c.forEach(function(e){a[e]={}}),this.unresolveGeonames=function(e){var n=t.obtainEffectiveGeonamesId(a.geonames,e);c.forEach(function(e){a[e][n]=void 0})},c.forEach(function(e){var n=u(e);i["set"+n]=function(n,t){r(a[e],t).resolve(n),s(a[e],t)},i["get"+n]=function(n){return o(a[e],n).promise}})}])}(),function(e){"use strict";e.module("ngGeonames").factory("geonamesService",["$log","$q","$http","geonamesHelpers","geonamesDefaults",function(n,t,o,r,s){var a=r.isDefined,i=e.isString,u=r.equals;return{query:function(r,c){var m=s.getDefaults(c),l=m.server,f=m.maxRows,d=m.postalCode,g=m.country,v=m.username,p=t.defer(),h=[],y=null,D={method:"JSONP",url:l,params:{},cancellable:!0};return a(r.q)&&i(r.q)&&""!==r.q&&(!0===d?(D.url+="/postalCodeLookupJSON",D.params.postalcode=r.q,y="postalcodes"):(D.url+="/searchJSON",D.params.q=r.q,y="geonames"),a(r.country)&&i(r.country)&&""!==r.country&&(g=r.country)),a(D.params)&&!u({},D.params)?(e.extend(D.params,{maxRows:f,country:g,username:v,callback:"JSON_CALLBACK"}),o(D).then(function(n){a(n[y])?(e.forEach(n[y],function(e,n){switch(y){case"postalcodes":a(e.title)||(e.title="["+e.postalcode+"] "),a(e.locationName)||(e.locationName=e.countryCode+" "+e.placeName);break;case"geonames":a(e.title)||(e.title=e.name),a(e.locationName)||(e.locationName=e.countryName)}this.push(e)},h),p.resolve(h)):p.reject("[Geonames] Invalid query: "+n.status.message)},function(e){p.reject("[Geonames] Request: "+(e.data||"failed"))})):(p.reject("[Geonames] Invalid query params"),n.error(D)),p.promise}}}])}(window.angular),function(e){"use strict";window.angular.module("ngGeonames").directive("geonames",["$q","geonamesData","geonamesDefaults","geonamesHelpers",function(e,n,t,o){return{restrict:"AE",replace:!1,scope:{defaults:"=",search:"=",id:"@"},transclude:!0,template:'<div class="angular-geonames"><div ng-transclude></div></div>',controller:["$scope",function(n){this._geonames=e.defer(),this.getGeonames=function(){return this._geonames.promise},this.getScope=function(){return n}}],link:function(e,o,r,s){n.isDefined,t.setDefaults(e.defaults,r.id);e.geonamesId=r.id;var a=t.getGeonamesCreationDefaults(r.id);s._geonames.resolve(a),n.setGeonames(a,r.id),e.$on("$destroy",function(){t.reset(r.id),n.unresolveGeonames(r.id)})}}}])}(),function(e){"use strict";window.angular.module("ngGeonames").directive("search",["$log","$timeout","$http","geonamesHelpers","geonamesService",function(e,n,t,o,r){return{restrict:"A",scope:!1,replace:!1,require:["geonames"],link:function(t,s,a,i){var u=o.isDefined,c=o.isString,m=i[0].getScope();i[0].getGeonames().then(function(o){var s;m.$watch("search",function(o){if(!t.settingSearchFromGeonames)return u(o.q)&&c(o.q)&&""!==o.q&&o.q!==s?(t.settingSearchFromScope=!0,t.$broadcast("geonamesDirectiveSearch.find_start"),r.query(o,a.id).then(function(e){o.find=e,t.$broadcast("geonamesDirectiveSearch.find_end",e)},function(n){o.find=[],t.$broadcast("geonamesDirectiveSearch.find_end",[]),e.error("[ng-geonames]  [Search]  "+n+".")}),s=o.q,void n(function(){t.settingSearchFromScope=!1})):void 0},!0)})}}}])}();